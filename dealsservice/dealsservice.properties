#spring.datasource.url=jdbc:postgresql://postgres:postgres@localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=postgres

#spring.jpa.database: "POSTGRESQL"
#spring.datasource.platform:  "postgres"
#spring.jpa.show-sql: "true"
#spring.database.driverClassName: "org.postgresql.Driver"

#spring.datasource.url: jdbc:postgresql://database:5432/equify_db"

spring.datasource.url=jdbc:postgresql://localhost:5432/
spring.datasource.username=postgres
spring.datasource.password={cipher}7a3e41e212fe7ac8d873ddfbd84910d507820e6b78a0ddc5b7343c38fa76e810

keycloak.realm=equify-realm
keycloak.auth-server-url=http://keycloak:8080/auth
keycloak.ssl-required=external
keycloak.resource=equify
keycloak.credentials.secret=ec380509-4c13-44b4-bc27-dbe48412daa4
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true

spring.cloud.stream.bindings.inboundOrgChanges.destination= companyChangeTopic
spring.cloud.stream.bindings.inboundOrgChanges.content-type= application/json
spring.cloud.stream.bindings.inboundOrgChanges.group= dealsGroup
spring.cloud.stream.kafka.binder.zkNodes= kafka
spring.cloud.stream.kafka.binder.brokers=kafka

#spring.datasource.testWhileIdle: "true"
#spring.datasource.validationQuery: "SELECT 1"
#spring.jpa.properties.hibernate.dialect: "org.hibernate.dialect.PostgreSQLDialect"

#example.property=testing
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=none
#spring.datasource.url=jdbc:mysql://equify@localhost:3306/equify_db
#spring.datasource.username=equify
#spring.datasource.password=Equ!fy
